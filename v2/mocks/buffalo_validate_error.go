// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/masonhubco/rebar/v2 (interfaces: BuffaloValidateError)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// BuffaloValidateError is a mock of BuffaloValidateError interface.
type BuffaloValidateError struct {
	ctrl     *gomock.Controller
	recorder *BuffaloValidateErrorMockRecorder
}

// BuffaloValidateErrorMockRecorder is the mock recorder for BuffaloValidateError.
type BuffaloValidateErrorMockRecorder struct {
	mock *BuffaloValidateError
}

// NewBuffaloValidateError creates a new mock instance.
func NewBuffaloValidateError(ctrl *gomock.Controller) *BuffaloValidateError {
	mock := &BuffaloValidateError{ctrl: ctrl}
	mock.recorder = &BuffaloValidateErrorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *BuffaloValidateError) EXPECT() *BuffaloValidateErrorMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *BuffaloValidateError) Error() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Error")
	ret0, _ := ret[0].(string)
	return ret0
}

// Error indicates an expected call of Error.
func (mr *BuffaloValidateErrorMockRecorder) Error() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*BuffaloValidateError)(nil).Error))
}

// HasAny mocks base method.
func (m *BuffaloValidateError) HasAny() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasAny")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasAny indicates an expected call of HasAny.
func (mr *BuffaloValidateErrorMockRecorder) HasAny() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasAny", reflect.TypeOf((*BuffaloValidateError)(nil).HasAny))
}

// String mocks base method.
func (m *BuffaloValidateError) String() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String.
func (mr *BuffaloValidateErrorMockRecorder) String() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*BuffaloValidateError)(nil).String))
}
