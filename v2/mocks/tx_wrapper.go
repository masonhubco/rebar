// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/masonhubco/rebar/v2/middleware (interfaces: TxWrapper)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	sqlx "github.com/jmoiron/sqlx"
)

// TxWrapper is a mock of TxWrapper interface.
type TxWrapper struct {
	ctrl     *gomock.Controller
	recorder *TxWrapperMockRecorder
}

// TxWrapperMockRecorder is the mock recorder for TxWrapper.
type TxWrapperMockRecorder struct {
	mock *TxWrapper
}

// NewTxWrapper creates a new mock instance.
func NewTxWrapper(ctrl *gomock.Controller) *TxWrapper {
	mock := &TxWrapper{ctrl: ctrl}
	mock.recorder = &TxWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *TxWrapper) EXPECT() *TxWrapperMockRecorder {
	return m.recorder
}

// WithTx mocks base method.
func (m *TxWrapper) WithTx(arg0 *sqlx.Tx, arg1 func(*sqlx.Tx) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithTx", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WithTx indicates an expected call of WithTx.
func (mr *TxWrapperMockRecorder) WithTx(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithTx", reflect.TypeOf((*TxWrapper)(nil).WithTx), arg0, arg1)
}
